name: Windows Server 2019 CI [Matrix]

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        package: [dirent, eigen3, fontconfig, freetype, harfbuzz, libepoxy, libogg, libpng, opus, opusfile, qt5-base, qt5-declarative, qt5-quickcontrols, sdl2, sdl2-image]
        triplet: [x86-windows, x64-windows]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        path: source
    - name: Inspect environment
      run: |
        vswhere -latest
      shell: pwsh
    - name: ${{ format('Install package {0}', matrix.package) }}
      run: |
        vcpkg install $Env:PACKAGE --triplet=$Env:TRIPLET
      env:
        PACKAGE: ${{ matrix.package }}
        TRIPLET: ${{ matrix.triplet }}
      shell: pwsh
    - name: Export dependencies
      run: |
        vcpkg export $Env:PACKAGE --triplet=$Env:TRIPLET --zip --output-dir="." --output="package-$Env:PACKAGE-$Env:TRIPLET"
        dir
      env:
        PACKAGE: ${{ matrix.package }}
        TRIPLET: ${{ matrix.triplet }}
      shell: pwsh
    - name: Publish exported dependencies
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ${{ format('openage-dep.{0}.{1}.zip', matrix.package, matrix.triplet) }}
        path: ${{ format('./package-{0}-{1}.zip', matrix.package, matrix.triplet) }}
        if-no-files-found: error
        retention-days: 30

  collect:
    runs-on: windows-2019
    needs: build
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        path: source
    - name: Make downloads folder
      run: |
        mkdir downloads
      shell: pwsh
    - name: Download built packages
      uses: actions/download-artifact@v2
      with:
        path: ${{ format('{0}/downloads', github.workspace) }}
    - name: Move
      run: |
        mkdir packages
        $zipfiles = Get-ChildItem -Path ./downloads -Recurse -File -Include *.zip
        foreach($zip in $zipfiles){
          Copy-Item -Path $zip -Destination ./packages
        }
        Remove-Item ./downloads -Force -Recurse
      shell: pwsh
    - name: Decompress
      run: |
        $zipfiles = Get-ChildItem -Path ./packages -Recurse -File -Include *.zip
        foreach($zip in $zipfiles){
          $current = Split-Path -Path $zip -Parent
          Expand-Archive $zip -DestinationPath $current
          Remove-Item $zip
        }
        echo (Get-ChildItem -Path ./packages -Recurse -File).FullName
      shell: pwsh
    - name: Merge
      run: |
        $package_dirs = Get-ChildItem -Path ./packages -Directory
        $flavours = "x86-windows", "x64-windows"
        foreach($flavour in $flavours){
          $dir_name = "merge-$($flavour)"
          mkdir $dir_name
          cd $dir_name
          foreach($package in $package_dirs){
            $package_name = Split-Path -Path $package -Leaf
            if(-Not $package_name.EndsWith($flavour)){
              echo "Skipping $($package_name)"
              continue
            }

            Move-Item -Path "$package" -Destination .
          }
          echo (Get-ChildItem -Path . -Recurse -File).FullName
          cd ..
          $file_name = $dir_name
          $file_name += ".zip"
          Compress-Archive -Path $dir_name -DestinationPath $file_name
          Remove-Item $dir_name -Recurse -Force
        }
      shell: pwsh

    - name: Publish dependency bundles
      uses: actions/upload-artifact@v2.2.4
      with:
        name: openage-dep-x86-windows.zip
        path: ./merge-x86-windows.zip
        if-no-files-found: error
        retention-days: 30
    - name: Publish dependency bundles
      uses: actions/upload-artifact@v2.2.4
      with:
        name: openage-dep-x64-windows.zip
        path: ./merge-x64-windows.zip
        if-no-files-found: error
        retention-days: 30